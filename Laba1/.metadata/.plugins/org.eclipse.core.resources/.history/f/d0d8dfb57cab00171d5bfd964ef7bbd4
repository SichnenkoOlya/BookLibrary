package bsuir.library.service.impl;

import bsuir.library.bean.Book;
import bsuir.library.bean.User;
import bsuir.library.dao.DAOAdmin;
import bsuir.library.dao.DAOFactory;
import bsuir.library.dao.DAOUser;
import bsuir.library.dao.exception.DAOException;
import bsuir.library.service.AdminService;
import bsuir.library.service.exception.ServiceException;

public class AdminServiceImpl extends UserServiceImpl implements AdminService {

	@Override
	public void deleteBook(Book book) throws ServiceException {
		DAOFactory daoFactory = DAOFactory.getInstance();
		DAOAdmin adminDAO = daoFactory.getAdminDAO();

		try {
			adminDAO.deleteBook(book);
		} catch (DAOException e) {
			throw new ServiceException(e);
		}
	}

	@Override
	public void authenticate(String login, String password) throws ServiceException {

		DAOFactory daoFactory = DAOFactory.getInstance();
		DAOUser userDAO = daoFactory.getUserDAO();

		try {
			User user = userDAO.authenticateUser(login, password);
			if (user.getAccessRights() != 1) {
				throw new DAOException("Вы не являетесь администаратором!");
			}

		} catch (DAOException e) {
			throw new ServiceException(e);
		}

	}
	@Override
	public void changeTypeOfBook(Book book, int typeOfBook) throws ServiceException {
		DAOFactory daoFactory = DAOFactory.getInstance();
		DAOAdmin adminDAO = daoFactory.getAdminDAO();

		try {
			adminDAO.changeTypeOfBook(book, typeOfBook);
		} catch (DAOException e) {
			throw new ServiceException(e);
		}
	}

	@Override
	public void addAdmin(String login, String password,String email) throws ServiceException{
		
		DAOFactory daoFactory = DAOFactory.getInstance();
		DAOAdmin adminDAO = daoFactory.getAdminDAO();

		try {
			adminDAO.addAdmin(login, password, email);
		} catch (DAOException e) {
			throw new ServiceException(e);
		}
	}
	@Override
	public void addDescriptionOfBook(Book book, String description)throws ServiceException{
		DAOFactory daoFactory = DAOFactory.getInstance();
		DAOAdmin adminDAO = daoFactory.getAdminDAO();

		try {
			adminDAO.addDescriptionOfBook(book, description);
		} catch (DAOException e) {
			throw new ServiceException(e);
		}
	}
}
