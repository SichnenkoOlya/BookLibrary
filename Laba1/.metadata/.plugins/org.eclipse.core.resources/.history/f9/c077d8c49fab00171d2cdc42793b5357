package bsuir.library.dao.impl;

import java.util.ArrayList;

import bsuir.library.bean.Book;
import bsuir.library.dao.DAOBook;
import bsuir.library.dao.exception.DAOException;
import bsuir.library.serialization.Serialization;

public class DAOBookImpl implements DAOBook {

	private ArrayList<Book> listOfBook;
	private String fileDBName = "DB_FILE.txt";

	public DAOBookImpl() {
		listOfBook = new ArrayList<Book>();
	}

	@Override
	public void addBook(String title, int typeOfBook) throws DAOException {

		listOfBook = Serialization.deserialize(fileDBName);
		Book book = new Book();
		book.setName(title);
		book.setType(typeOfBook);
		boolean isInList = false;
		for (Book element : listOfBook) {
			if (element.getName().equalsIgnoreCase(book.getName()) && element.getType() == book.getType()) {
				isInList = true;
			}
		}
		if (isInList) {
			throw new DAOException("Такая книга уже есть!");
		}
		listOfBook.add(book);
		Serialization.serialize(listOfBook, fileDBName);

	}

	

	@Override
	public Book searchBook(String name) throws DAOException {
		listOfBook = Serialization.deserialize(fileDBName);
		boolean isInList = false;
		Book book = new Book();
		for (Book element : listOfBook) {
			if (element.getName().equalsIgnoreCase(name)) {
				isInList = true;
				book = element;
			}
		}
		if (!isInList) {
			throw new DAOException("Такой книги нет!");
		}
		return book;
	}
	
	public ArrayList<Book> getListOfBook() throws DAOException{
		listOfBook = Serialization.deserialize(fileDBName);
		if (listOfBook==null) {
			throw new DAOException("В библиотеке нет книг!");
		}
		for(Book element:listOfBook)
		{
			System.out.println(element.getName()+" "+ element.getType());
		}
		return listOfBook;

	}
}
